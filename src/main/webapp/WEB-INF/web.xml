<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>Archetype Created Web Application</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!--    <context-param>-->
    <!--        <param-name>log4jConfigLocation</param-name>-->
    <!--        <param-value>classpath:log4j.properties.xml</param-value>-->
    <!--    </context-param>-->
    <!--    <listener>-->
    <!--        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>-->
    <!--    </listener>-->

    <listener>
        <!--contextLoaderListener 监听器 实现了ServletContextListener接口，其作用是启动Web容器时，自动装配
        ApplicationContext的配置信息。在web.xml配置这个监听器，启动容器时，就会默认执行它的实现方法-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--配置 DispatherServlet -->

    <servlet>

        <!--   DispatcherServlet 是前置控制器，主要用于拦截匹配的请求，拦截匹配规则要自定义，
        依据相应的规则分发到Controller来处理，是配置spring MVC 的第一步                       -->
        <servlet-name>spring-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--配置SpringMVC 需要加载的配置文件 spring-mvc.xml-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>

        <!--  表示启动容器时初始化该Servlet，当值为0或者大于0时，表示容器在应用启动时加载并初始化这个Servlet。
        如果值小于0或未指定时，则指示容器在该Servlet 被选择是才加载。值越小Servlet的优先级越高，应用启动时就越先加载
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--  声明了与该Servlet 相应的匹配股则    -->
    <servlet-mapping>
        <servlet-name>spring-dispatcher</servlet-name>
        <!--默认匹配所有的请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <filter>
        <filter-name>XssFilter</filter-name>
        <filter-class>com.ay.filter.XSSFilter</filter-class>

    </filter>
    <filter-mapping>
        <filter-name>XssFilter</filter-name>
        <url-pattern>/attack/xssSubmitByGet</url-pattern>
        <url-pattern>/attack/xssSubmitByPost</url-pattern>

    </filter-mapping>


    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


</web-app>
